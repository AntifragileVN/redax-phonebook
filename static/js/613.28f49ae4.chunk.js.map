{"version":3,"file":"static/js/613.28f49ae4.chunk.js","mappings":"+ZAMaA,EAAOC,EAAAA,GAAOC,KAAIC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kCAIlBC,EAAQJ,EAAAA,GAAOK,MAAKC,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,yEAMpBI,EAAeP,EAAAA,GAAOQ,IAAGC,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,2HAQzBO,EAAcV,EAAAA,GAAOW,MAAKC,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,kLAmB1BU,GAPab,EAAAA,GAAOQ,IAAGM,IAAAA,GAAAX,EAAAA,EAAAA,GAAA,kFAOZH,EAAAA,EAAAA,IAAOe,EAAAA,IAAPf,CAA6BgB,IAAAA,GAAAb,EAAAA,EAAAA,GAAA,kFAOxCc,GAAYjB,EAAAA,EAAAA,IAAOkB,EAAAA,IAAPlB,CAA+BmB,IAAAA,GAAAhB,EAAAA,EAAAA,GAAA,iFAO3CiB,GAAepB,EAAAA,EAAAA,IAAOqB,EAAAA,IAAPrB,CAAcsB,IAAAA,GAAAnB,EAAAA,EAAAA,GAAA,iFAO7BoB,GAAYvB,EAAAA,EAAAA,IAAOwB,EAAAA,IAAPxB,CAA4ByB,IAAAA,GAAAtB,EAAAA,EAAAA,GAAA,iFAOxCuB,GAAa1B,EAAAA,EAAAA,IAAO2B,EAAAA,IAAP3B,CAAqB4B,IAAAA,GAAAzB,EAAAA,EAAAA,GAAA,gF,+GCrEzC0B,EAAW7B,EAAAA,GAAO8B,GAAE5B,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4VAqBb4B,EAAW/B,EAAAA,GAAOQ,IAAGF,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,iCAIrB6B,EAAahC,EAAAA,GAAOiC,EAACxB,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,+FAOrB+B,EAAclC,EAAAA,GAAOiC,EAACrB,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,sE,iDCzB5B,SAASgC,EAAWC,GAAwB,IAArBC,EAAID,EAAJC,KAAMC,EAAMF,EAANE,OAAQC,EAAEH,EAAFG,GACrCC,GAAWC,EAAAA,EAAAA,MAEjB,OACCC,EAAAA,EAAAA,MAACb,EAAQ,CAAAc,SAAA,EACRD,EAAAA,EAAAA,MAACX,EAAQ,CAAAY,SAAA,EACRC,EAAAA,EAAAA,KAACZ,EAAU,CAAAW,SAAEN,KACbO,EAAAA,EAAAA,KAACV,EAAW,CAAAS,SAAEL,QAGfM,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAACC,UAAU,gBAAgBC,QAAS,kBAAMP,GAASQ,EAAAA,EAAAA,IAAcT,GAAI,EAACI,UAC5EC,EAAAA,EAAAA,KAACK,EAAAA,IAAgB,CAACC,KAAM,SAI5B,CCtBA,IAAMC,EAAOnD,EAAAA,GAAOoD,GAAElD,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,QCFTkD,EAAiB,SAACC,GAAK,OAAKA,EAAMC,SAASC,KAAM,EAEjDC,EAAkB,SAACH,GAAK,OAAKA,EAAMC,SAASG,SAAU,E,UCK5D,SAASC,EAAWvB,GAAc,IAAXwB,EAAMxB,EAANwB,OACvBpB,GAAWC,EAAAA,EAAAA,OAEjBoB,EAAAA,EAAAA,YAAU,WACTrB,GAASsB,EAAAA,EAAAA,MACV,GAAG,CAACtB,IAEJ,IAAMkB,GAAYK,EAAAA,EAAAA,IAAYN,GAGxBO,GAFWD,EAAAA,EAAAA,IAAYV,GAEKO,QAAO,SAACK,GAAO,OAChDA,EAAQ5B,KAAK6B,cAAcC,SAASP,EAAO,IAG5C,OACClB,EAAAA,EAAAA,MAAA0B,EAAAA,SAAA,CAAAzB,SAAA,CACEe,IAAad,EAAAA,EAAAA,KAAA,MAAAD,SAAI,iBAClBC,EAAAA,EAAAA,KAACO,EAAI,CAAAR,SACHqB,EAAiBK,KAAI,SAAAC,GAAA,IAAG/B,EAAE+B,EAAF/B,GAAIF,EAAIiC,EAAJjC,KAAMC,EAAMgC,EAANhC,OAAM,OACxCM,EAAAA,EAAAA,KAACT,EAAW,CAEXI,GAAIA,EACJF,KAAMA,EACNC,OAAQA,GAHHC,EAIS,QAKpB,C,wBClCagC,EAAS,SAAHnC,GAAkC,IAA5BwB,EAAMxB,EAANwB,OAAQY,EAAYpC,EAAZoC,aAChC,OACC9B,EAAAA,EAAAA,MAACnC,EAAAA,GAAY,CAAAoC,SAAA,EACZC,EAAAA,EAAAA,KAAClB,EAAAA,GAAU,KACXkB,EAAAA,EAAAA,KAAClC,EAAAA,GAAW,CACX+D,KAAK,OACLC,MAAOd,EACPvB,KAAK,SACLsC,SAAU,SAACC,GAAC,OAAKJ,EAAaI,EAAEC,OAAOH,MAAMI,oBAAoB,MAIrE,E,8BCXaC,GAAa/E,EAAAA,EAAAA,IAAOD,EAAAA,GAAPC,CAAYE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kCAIzBI,EAAeP,EAAAA,GAAOQ,IAAGF,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,mGAOzB6E,EAAehF,EAAAA,GAAOQ,IAAGC,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,mCAIzBC,EAAQJ,EAAAA,GAAOK,MAAKO,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,yEAMpB8E,GAAejF,EAAAA,EAAAA,IAAOkF,EAAAA,GAAPlF,CAAac,IAAAA,GAAAX,EAAAA,EAAAA,GAAA,kL,UCNnCgF,EAAgB,CACrB9C,KAAM,GACNC,OAAQ,IAOH8C,EAASC,EAAAA,KAAaC,MAAM,CACjCjD,KAAMgD,EAAAA,KACJE,IAAI,GAAI,iCACRC,SAAS,YACTC,QARiB,yHAUjB,0IAEFnD,OAAQ+C,EAAAA,KACNE,IAAI,GAAI,iCACRC,SAAS,YACTC,QAbF,6EAeE,kGAIUC,EAAY,WACxB,IAAMnC,GAAWQ,EAAAA,EAAAA,IAAYV,GACvBb,GAAWC,EAAAA,EAAAA,MAyBjB,OACCG,EAAAA,EAAAA,KAAC+C,EAAAA,GAAM,CACNR,cAAeA,EACfS,iBAAkBR,EAClBS,SA3BmB,SAACC,EAAU1D,GAAqB,IAAjB2D,EAAS3D,EAAT2D,UACdxC,EAASyC,MAC7B,SAAC/B,GAAO,OAAKA,EAAQ5B,KAAK6B,gBAAkB4B,EAAWzD,KAAK6B,aAAa,MAIzE6B,IACAE,EAAAA,GAAMC,MAAM,0BAA2B,CACtCC,SAAU,eACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,MAAO,UAITnE,GAASoE,EAAAA,EAAAA,IAAWd,IACpBC,GACD,EAMyBpD,UAEvBD,EAAAA,EAAAA,MAACqC,EAAU,CAAApC,SAAA,EACVD,EAAAA,EAAAA,MAACsC,EAAY,CAAArC,SAAA,EACZC,EAAAA,EAAAA,KAACxC,EAAK,CAACyG,QAAQ,OAAMlE,SAAC,UACtBD,EAAAA,EAAAA,MAACnC,EAAY,CAAAoC,SAAA,EACZC,EAAAA,EAAAA,KAAC/B,EAAAA,GAAQ,KACT+B,EAAAA,EAAAA,KAACqC,EAAY,CACZR,KAAK,OACLpC,KAAK,OACLyE,aAAa,MACbC,YAAY,oBAGdnE,EAAAA,EAAAA,KAACoE,EAAAA,GAAY,CAAC3E,KAAM,aAGrBK,EAAAA,EAAAA,MAACsC,EAAY,CAAArC,SAAA,EACZC,EAAAA,EAAAA,KAACxC,EAAK,CAACyG,QAAQ,SAAQlE,SAAC,eACxBD,EAAAA,EAAAA,MAACnC,EAAY,CAAAoC,SAAA,EACZC,EAAAA,EAAAA,KAACrB,EAAAA,GAAS,KACVqB,EAAAA,EAAAA,KAACqC,EAAY,CACZR,KAAK,MACLpC,KAAK,SACL0E,YAAY,qBAGdnE,EAAAA,EAAAA,KAACoE,EAAAA,GAAY,CAAC3E,KAAM,eAGrBO,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAAC4B,KAAK,SAAQ9B,SAAC,oBAI1B,ECjFA,EAtBqB,WACpB,IAAAsE,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCrD,EAAMuD,EAAA,GAAEE,EAASF,EAAA,GAMxB,OACCzE,EAAAA,EAAAA,MAAA0B,EAAAA,SAAA,CAAAzB,SAAA,EACCD,EAAAA,EAAAA,MAAC4E,EAAAA,GAAO,CAAA3E,SAAA,EACPC,EAAAA,EAAAA,KAAC2E,EAAAA,GAAY,CAAA5E,SAAC,eACdC,EAAAA,EAAAA,KAAC8C,EAAS,QAEXhD,EAAAA,EAAAA,MAAC4E,EAAAA,GAAO,CAAA3E,SAAA,EACPC,EAAAA,EAAAA,KAAC2E,EAAAA,GAAY,CAAA5E,SAAC,cACdC,EAAAA,EAAAA,KAAC2B,EAAM,CAACX,OAAQA,EAAQY,aAZN,SAACE,GACrB2C,EAAU3C,EACX,KAWG9B,EAAAA,EAAAA,KAACe,EAAW,CAACC,OAAQA,SAIzB,C","sources":["Components/Form/Form.styled.jsx","Components/ContactsList/ContactItem/ContactItem.styled.jsx","Components/ContactsList/ContactItem/ContactItem.jsx","Components/ContactsList/ContactList.styled.jsx","redax/contacts/selectors.js","Components/ContactsList/ContactList.jsx","Components/Filter/Filter.jsx","Components/Phonebook/Phonebook.styled.jsx","Components/Phonebook/Phonebook.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import { IoPersonCircleOutline, IoSearchSharp } from 'react-icons/io5';\r\nimport { MdOutlineAlternateEmail } from 'react-icons/md';\r\nimport { FiLock } from 'react-icons/fi';\r\nimport { MdOutlinePhoneInTalk } from 'react-icons/md';\r\nimport styled from 'styled-components';\r\n\r\nexport const Form = styled.form`\r\n\tbackground: #212832;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n\tcolor: #8caab9;\r\n\tfont-size: 18px;\r\n\tmargin-bottom: 15px;\r\n`;\r\n\r\nexport const InputWrapper = styled.div`\r\n\tbackground: #455a64;\r\n\tposition: relative;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tmargin-bottom: 25px;\r\n`;\r\n\r\nexport const StyledInput = styled.input`\r\n\twidth: 100%;\r\n\tpadding-top: 17px;\r\n\tpadding-bottom: 17px;\r\n\tpadding-left: 40px;\r\n\tborder: none;\r\n\tbackground: #455a64;\r\n\r\n\tfont-size: 18px;\r\n\tcolor: inherit;\r\n`;\r\n\r\nexport const StyledIcon = styled.div`\r\n\tposition: absolute;\r\n\tleft: 10px;\r\n\twidth: 25px;\r\n\theight: 25px;\r\n`;\r\n\r\nexport const UserIcon = styled(IoPersonCircleOutline)`\r\n\tposition: absolute;\r\n\tleft: 10px;\r\n\twidth: 25px;\r\n\theight: 25px;\r\n`;\r\n\r\nexport const EmailIcon = styled(MdOutlineAlternateEmail)`\r\n\tposition: absolute;\r\n\tleft: 10px;\r\n\twidth: 25px;\r\n\theight: 25px;\r\n`;\r\n\r\nexport const PasswordIcon = styled(FiLock)`\r\n\tposition: absolute;\r\n\tleft: 10px;\r\n\twidth: 25px;\r\n\theight: 25px;\r\n`;\r\n\r\nexport const PhoneIcon = styled(MdOutlinePhoneInTalk)`\r\n\tposition: absolute;\r\n\tleft: 10px;\r\n\twidth: 25px;\r\n\theight: 25px;\r\n`;\r\n\r\nexport const SearchIcon = styled(IoSearchSharp)`\r\n\tposition: absolute;\r\n\tleft: 10px;\r\n\twidth: 25px;\r\n\theight: 25px;\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nconst ListItem = styled.li`\r\n\tposition: relative;\r\n\tbackground: #263238;\r\n\tdisplay: flex;\r\n\talign-content: center;\r\n\tjustify-content: space-between;\r\n\r\n\t&:not(:last-child) {\r\n\t\tmargin-bottom: 20px;\r\n\t}\r\n\r\n\t&::before {\r\n\t\tcontent: '';\r\n\t\theight: 100%;\r\n\t\twidth: 10px;\r\n\t\tposition: absolute;\r\n\t\tleft: 0;\r\n\t\ttop: 0;\r\n\t\tbackground: #fed36a;\r\n\t}\r\n`;\r\nexport const ItemInfo = styled.div`\r\n\tpadding: 15px 20px;\r\n`;\r\n\r\nexport const PersonName = styled.p`\r\n\tfont-size: 20px;\r\n\tfont-weight: 600;\r\n\tline-height: 1.2;\r\n\tmargin-bottom: 5px;\r\n`;\r\n\r\nexport const PhoneNumber = styled.p`\r\n\tfont-size: 14px;\r\n\tline-height: 1.2;\r\n\tcolor: #c0bebe;\r\n`;\r\n\r\nexport { ListItem };\r\n","import PropTypes from 'prop-types';\r\n\r\nimport { ListItem, ItemInfo, PersonName, PhoneNumber } from './ContactItem.styled';\r\nimport { useDispatch } from 'react-redux';\r\nimport { deleteContact } from 'redax/contacts/operations';\r\n\r\nimport { Button } from 'Components/Button/Button';\r\nimport { RiDeleteBin5Line } from 'react-icons/ri';\r\n\r\nexport function ContactItem({ name, number, id }) {\r\n\tconst dispatch = useDispatch();\r\n\r\n\treturn (\r\n\t\t<ListItem>\r\n\t\t\t<ItemInfo>\r\n\t\t\t\t<PersonName>{name}</PersonName>\r\n\t\t\t\t<PhoneNumber>{number}</PhoneNumber>\r\n\t\t\t</ItemInfo>\r\n\r\n\t\t\t<Button className=\"contactDelete\" onClick={() => dispatch(deleteContact(id))}>\r\n\t\t\t\t<RiDeleteBin5Line size={25} />\r\n\t\t\t</Button>\r\n\t\t</ListItem>\r\n\t);\r\n}\r\n\r\nContactItem.propTypes = {\r\n\tname: PropTypes.string,\r\n\tnumber: PropTypes.string,\r\n\tid: PropTypes.string.isRequired,\r\n};\r\n","import styled from 'styled-components';\r\n\r\nconst List = styled.ul``;\r\n\r\nexport { List };\r\n","export const selectContacts = (state) => state.contacts.items;\r\n\r\nexport const selectIsLoading = (state) => state.contacts.isLoading;\r\n\r\n// export const getFilter = (state) => state.filter;\r\n","import { ContactItem } from './ContactItem/ContactItem';\r\nimport { List } from './ContactList.styled';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectContacts, selectIsLoading } from '../../redax/contacts/selectors';\r\nimport { fetchContacts } from 'redax/contacts/operations';\r\nimport { useEffect } from 'react';\r\n\r\nexport function ContactList({ filter }) {\r\n\tconst dispatch = useDispatch();\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(fetchContacts());\r\n\t}, [dispatch]);\r\n\r\n\tconst isLoading = useSelector(selectIsLoading);\r\n\tconst contacts = useSelector(selectContacts);\r\n\r\n\tconst filteredContacts = contacts.filter((contact) =>\r\n\t\tcontact.name.toLowerCase().includes(filter)\r\n\t);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading && <h1>Whate a bit</h1>}\r\n\t\t\t<List>\r\n\t\t\t\t{filteredContacts.map(({ id, name, number }) => (\r\n\t\t\t\t\t<ContactItem\r\n\t\t\t\t\t\tkey={id}\r\n\t\t\t\t\t\tid={id}\r\n\t\t\t\t\t\tname={name}\r\n\t\t\t\t\t\tnumber={number}\r\n\t\t\t\t\t></ContactItem>\r\n\t\t\t\t))}\r\n\t\t\t</List>\r\n\t\t</>\r\n\t);\r\n}\r\n","import { InputWrapper, SearchIcon, StyledInput } from 'Components/Form/Form.styled';\r\n\r\nexport const Filter = ({ filter, handleChange }) => {\r\n\treturn (\r\n\t\t<InputWrapper>\r\n\t\t\t<SearchIcon />\r\n\t\t\t<StyledInput\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tvalue={filter}\r\n\t\t\t\tname=\"filter\"\r\n\t\t\t\tonChange={(e) => handleChange(e.target.value.toLocaleLowerCase())}\r\n\t\t\t/>\r\n\t\t</InputWrapper>\r\n\t);\r\n};\r\n","import styled from 'styled-components';\r\nimport { Field, Form } from 'formik';\r\n\r\nexport const FormStyled = styled(Form)`\r\n\tbackground: #212832;\r\n`;\r\n\r\nexport const InputWrapper = styled.div`\r\n\tbackground: #455a64;\r\n\tposition: relative;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n`;\r\n\r\nexport const FieldWrapper = styled.div`\r\n\tpadding-bottom: 20px;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n\tcolor: #8caab9;\r\n\tfont-size: 18px;\r\n\tmargin-bottom: 15px;\r\n`;\r\n\r\nexport const ContactInput = styled(Field)`\r\n\twidth: 100%;\r\n\tpadding-top: 17px;\r\n\tpadding-bottom: 17px;\r\n\tpadding-left: 40px;\r\n\tborder: none;\r\n\tbackground: #455a64;\r\n\r\n\tfont-size: 18px;\r\n\tcolor: inherit;\r\n`;\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { selectContacts } from 'redax/contacts/selectors';\r\nimport { addContact } from 'redax/contacts/operations';\r\n\r\nimport { Formik, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport {\r\n\tFormStyled,\r\n\tFieldWrapper,\r\n\tInputWrapper,\r\n\tLabel,\r\n\tContactInput,\r\n} from './Phonebook.styled';\r\n\r\nimport { Button } from 'Components/Button/Button';\r\nimport { UserIcon, PhoneIcon } from 'Components/Form/Form.styled';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tnumber: '',\r\n};\r\n\r\nconst namePattern = /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/;\r\nconst phonePattern =\r\n\t/\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/;\r\n\r\nconst schema = Yup.object().shape({\r\n\tname: Yup.string()\r\n\t\t.max(15, 'Must be 15 characters or less')\r\n\t\t.required('Required')\r\n\t\t.matches(\r\n\t\t\tnamePattern,\r\n\t\t\t\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n\t\t),\r\n\tnumber: Yup.string()\r\n\t\t.max(13, 'Must be 13 characters or less')\r\n\t\t.required('Required')\r\n\t\t.matches(\r\n\t\t\tphonePattern,\r\n\t\t\t'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\r\n\t\t),\r\n});\r\n\r\nexport const Phonebook = () => {\r\n\tconst contacts = useSelector(selectContacts);\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst handleSubmit = (newContact, { resetForm }) => {\r\n\t\tconst alreadyExist = contacts.find(\r\n\t\t\t(contact) => contact.name.toLowerCase() === newContact.name.toLowerCase()\r\n\t\t);\r\n\r\n\t\tif (alreadyExist) {\r\n\t\t\tresetForm();\r\n\t\t\ttoast.error('Such name already exist', {\r\n\t\t\t\tposition: 'bottom-right',\r\n\t\t\t\tautoClose: 4000,\r\n\t\t\t\thideProgressBar: false,\r\n\t\t\t\tcloseOnClick: true,\r\n\t\t\t\tpauseOnHover: true,\r\n\t\t\t\tdraggable: true,\r\n\t\t\t\tprogress: undefined,\r\n\t\t\t\ttheme: 'dark',\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tdispatch(addContact(newContact));\r\n\t\tresetForm();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tinitialValues={initialValues}\r\n\t\t\tvalidationSchema={schema}\r\n\t\t\tonSubmit={handleSubmit}\r\n\t\t>\r\n\t\t\t<FormStyled>\r\n\t\t\t\t<FieldWrapper>\r\n\t\t\t\t\t<Label htmlFor=\"name\">Name</Label>\r\n\t\t\t\t\t<InputWrapper>\r\n\t\t\t\t\t\t<UserIcon />\r\n\t\t\t\t\t\t<ContactInput\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tname=\"name\"\r\n\t\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\t\tplaceholder=\"Tom Jhonson\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</InputWrapper>\r\n\t\t\t\t\t<ErrorMessage name={'name'}></ErrorMessage>\r\n\t\t\t\t</FieldWrapper>\r\n\r\n\t\t\t\t<FieldWrapper>\r\n\t\t\t\t\t<Label htmlFor=\"number\">Telephone</Label>\r\n\t\t\t\t\t<InputWrapper>\r\n\t\t\t\t\t\t<PhoneIcon />\r\n\t\t\t\t\t\t<ContactInput\r\n\t\t\t\t\t\t\ttype=\"tel\"\r\n\t\t\t\t\t\t\tname=\"number\"\r\n\t\t\t\t\t\t\tplaceholder=\"+28023456724\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</InputWrapper>\r\n\t\t\t\t\t<ErrorMessage name={'number'}></ErrorMessage>\r\n\t\t\t\t</FieldWrapper>\r\n\r\n\t\t\t\t<Button type=\"submit\">Add contact</Button>\r\n\t\t\t</FormStyled>\r\n\t\t</Formik>\r\n\t);\r\n};\r\n","import { ContactList } from 'Components/ContactsList/ContactList';\r\nimport { Filter } from 'Components/Filter/Filter';\r\nimport { Section, SectionTitle } from 'Components/Layout/Layout.styled';\r\nimport { Phonebook } from 'Components/Phonebook/Phonebook';\r\nimport { useState } from 'react';\r\n\r\nconst ContactsPage = () => {\r\n\tconst [filter, setFilter] = useState('');\r\n\r\n\tconst handleChange = (value) => {\r\n\t\tsetFilter(value);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Section>\r\n\t\t\t\t<SectionTitle>Phonebook</SectionTitle>\r\n\t\t\t\t<Phonebook />\r\n\t\t\t</Section>\r\n\t\t\t<Section>\r\n\t\t\t\t<SectionTitle>Contacts</SectionTitle>\r\n\t\t\t\t<Filter filter={filter} handleChange={handleChange} />\r\n\t\t\t\t<ContactList filter={filter} />\r\n\t\t\t</Section>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default ContactsPage;\r\n"],"names":["Form","styled","form","_templateObject","_taggedTemplateLiteral","Label","label","_templateObject2","InputWrapper","div","_templateObject3","StyledInput","input","_templateObject4","UserIcon","_templateObject5","IoPersonCircleOutline","_templateObject6","EmailIcon","MdOutlineAlternateEmail","_templateObject7","PasswordIcon","FiLock","_templateObject8","PhoneIcon","MdOutlinePhoneInTalk","_templateObject9","SearchIcon","IoSearchSharp","_templateObject10","ListItem","li","ItemInfo","PersonName","p","PhoneNumber","ContactItem","_ref","name","number","id","dispatch","useDispatch","_jsxs","children","_jsx","Button","className","onClick","deleteContact","RiDeleteBin5Line","size","List","ul","selectContacts","state","contacts","items","selectIsLoading","isLoading","ContactList","filter","useEffect","fetchContacts","useSelector","filteredContacts","contact","toLowerCase","includes","_Fragment","map","_ref2","Filter","handleChange","type","value","onChange","e","target","toLocaleLowerCase","FormStyled","FieldWrapper","ContactInput","Field","initialValues","schema","Yup","shape","max","required","matches","Phonebook","Formik","validationSchema","onSubmit","newContact","resetForm","find","toast","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","addContact","htmlFor","autoComplete","placeholder","ErrorMessage","_useState","useState","_useState2","_slicedToArray","setFilter","Section","SectionTitle"],"sourceRoot":""}