{"version":3,"file":"static/js/613.346dafea.chunk.js","mappings":"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","sources":["Components/Form/Form.styled.jsx","redax/contacts/selectors.js","Components/ContactsList/ContactItem/ContactItem.styled.jsx","Components/ContactsList/ContactItem/ContactItem.jsx","Components/ContactsList/ContactList.styled.jsx","Components/ContactsList/ContactList.jsx","Components/Filter/Filter.jsx","Components/Phonebook/Phonebook.styled.jsx","Components/Phonebook/Phonebook.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import { IoPersonCircleOutline, IoSearchSharp } from 'react-icons/io5';\r\nimport { MdOutlineAlternateEmail } from 'react-icons/md';\r\nimport { FiLock } from 'react-icons/fi';\r\nimport { MdOutlinePhoneInTalk } from 'react-icons/md';\r\nimport styled from 'styled-components';\r\n\r\nexport const Form = styled.form`\r\n\tbackground: #212832;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n\tcolor: #8caab9;\r\n\tfont-size: 18px;\r\n\tmargin-bottom: 15px;\r\n`;\r\n\r\nexport const InputWrapper = styled.div`\r\n\tbackground: #455a64;\r\n\tposition: relative;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tmargin-bottom: 25px;\r\n`;\r\n\r\nexport const StyledInput = styled.input`\r\n\twidth: 100%;\r\n\tpadding-top: 17px;\r\n\tpadding-bottom: 17px;\r\n\tpadding-left: 40px;\r\n\tborder: none;\r\n\tbackground: #455a64;\r\n\r\n\tfont-size: 18px;\r\n\tcolor: inherit;\r\n`;\r\n\r\nexport const StyledIcon = styled.div`\r\n\tposition: absolute;\r\n\tleft: 10px;\r\n\twidth: 25px;\r\n\theight: 25px;\r\n`;\r\n\r\nexport const UserIcon = styled(IoPersonCircleOutline)`\r\n\tposition: absolute;\r\n\tleft: 10px;\r\n\twidth: 25px;\r\n\theight: 25px;\r\n`;\r\n\r\nexport const EmailIcon = styled(MdOutlineAlternateEmail)`\r\n\tposition: absolute;\r\n\tleft: 10px;\r\n\twidth: 25px;\r\n\theight: 25px;\r\n`;\r\n\r\nexport const PasswordIcon = styled(FiLock)`\r\n\tposition: absolute;\r\n\tleft: 10px;\r\n\twidth: 25px;\r\n\theight: 25px;\r\n`;\r\n\r\nexport const PhoneIcon = styled(MdOutlinePhoneInTalk)`\r\n\tposition: absolute;\r\n\tleft: 10px;\r\n\twidth: 25px;\r\n\theight: 25px;\r\n`;\r\n\r\nexport const SearchIcon = styled(IoSearchSharp)`\r\n\tposition: absolute;\r\n\tleft: 10px;\r\n\twidth: 25px;\r\n\theight: 25px;\r\n`;\r\n","export const selectContacts = (state) => state.contacts.items;\r\n\r\nexport const selectIsLoading = (state) => state.contacts.isLoading;\r\n\r\n// export const getFilter = (state) => state.filter;\r\n","import styled from 'styled-components';\r\n\r\nconst BaseListItem = styled.li`\r\n\tposition: relative;\r\n\tbackground: #263238;\r\n\tdisplay: flex;\r\n\talign-content: center;\r\n\tjustify-content: space-between;\r\n\r\n\t&:not(:last-child) {\r\n\t\tmargin-bottom: 20px;\r\n\t}\r\n\r\n\t&::before {\r\n\t\tcontent: '';\r\n\t\theight: 100%;\r\n\t\twidth: 10px;\r\n\t\tposition: absolute;\r\n\t\tleft: 0;\r\n\t\ttop: 0;\r\n\t\tbackground: #fed36a;\r\n\t}\r\n`;\r\n\r\nconst ListItem = styled(BaseListItem)`\r\n\ttransition: opacity 500ms;\r\n\topacity: ${({ state }) => (state === 'entered' || state === 'entering' ? 1 : 0)};\r\n`;\r\n\r\nexport const ItemInfo = styled.div`\r\n\tpadding: 15px 20px;\r\n`;\r\n\r\nexport const PersonName = styled.p`\r\n\tfont-size: 20px;\r\n\tfont-weight: 600;\r\n\tline-height: 1.2;\r\n\tmargin-bottom: 5px;\r\n`;\r\n\r\nexport const PhoneNumber = styled.p`\r\n\tfont-size: 14px;\r\n\tline-height: 1.2;\r\n\tcolor: #c0bebe;\r\n`;\r\n\r\nexport { ListItem };\r\n","import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { deleteContact } from 'redax/contacts/operations';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { ListItem, ItemInfo, PersonName, PhoneNumber } from './ContactItem.styled';\r\n\r\nimport { Button } from 'Components/Button/Button';\r\nimport { RiDeleteBin5Line } from 'react-icons/ri';\r\n\r\nimport { TailSpin } from 'react-loader-spinner';\r\nexport function ContactItem({ name, number, id, state }) {\r\n\tconst dispatch = useDispatch();\r\n\tconst [isDeleting, setIsDeleting] = useState(false);\r\n\r\n\tconst handleDelete = (id) => {\r\n\t\tsetIsDeleting(true);\r\n\t\tdispatch(deleteContact(id));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<ListItem state={state}>\r\n\t\t\t<ItemInfo>\r\n\t\t\t\t<PersonName>{name}</PersonName>\r\n\t\t\t\t<PhoneNumber>{number}</PhoneNumber>\r\n\t\t\t</ItemInfo>\r\n\r\n\t\t\t<Button\r\n\t\t\t\tclassName=\"contactDelete\"\r\n\t\t\t\tonClick={() => handleDelete(id)}\r\n\t\t\t\tdisabled={isDeleting}\r\n\t\t\t>\r\n\t\t\t\t{isDeleting ? (\r\n\t\t\t\t\t<TailSpin color=\"#000\" width={25} height={25} />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<RiDeleteBin5Line size={25} />\r\n\t\t\t\t)}\r\n\t\t\t</Button>\r\n\t\t</ListItem>\r\n\t);\r\n}\r\n\r\nContactItem.propTypes = {\r\n\tname: PropTypes.string,\r\n\tnumber: PropTypes.string,\r\n\tid: PropTypes.string.isRequired,\r\n};\r\n","import styled from 'styled-components';\r\nimport { TransitionGroup } from 'react-transition-group';\r\n\r\nconst List = styled(TransitionGroup)``;\r\n\r\nexport { List };\r\n","import { ContactItem } from './ContactItem/ContactItem';\r\nimport { List } from './ContactList.styled';\r\nimport { Transition } from 'react-transition-group';\r\n\r\nexport function ContactList({ filter, contacts }) {\r\n\tconst filteredContacts = contacts.filter((contact) =>\r\n\t\tcontact.name.toLowerCase().includes(filter)\r\n\t);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<List component=\"ul\">\r\n\t\t\t\t{filteredContacts.map(({ id, name, number }) => (\r\n\t\t\t\t\t<Transition timeout={500} mountOnEnter unmountOnExit>\r\n\t\t\t\t\t\t{(state) => (\r\n\t\t\t\t\t\t\t<ContactItem\r\n\t\t\t\t\t\t\t\tkey={id}\r\n\t\t\t\t\t\t\t\tid={id}\r\n\t\t\t\t\t\t\t\tname={name}\r\n\t\t\t\t\t\t\t\tnumber={number}\r\n\t\t\t\t\t\t\t\tstate={state}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Transition>\r\n\t\t\t\t))}\r\n\t\t\t</List>\r\n\t\t</>\r\n\t);\r\n}\r\n","import { InputWrapper, SearchIcon, StyledInput } from 'Components/Form/Form.styled';\r\n\r\nexport const Filter = ({ filter, handleChange }) => {\r\n\treturn (\r\n\t\t<InputWrapper>\r\n\t\t\t<SearchIcon />\r\n\t\t\t<StyledInput\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tvalue={filter}\r\n\t\t\t\tname=\"filter\"\r\n\t\t\t\tonChange={(e) => handleChange(e.target.value.toLocaleLowerCase())}\r\n\t\t\t/>\r\n\t\t</InputWrapper>\r\n\t);\r\n};\r\n","import styled from 'styled-components';\r\nimport { Field, Form } from 'formik';\r\n\r\nexport const FormStyled = styled(Form)`\r\n\tbackground: #212832;\r\n`;\r\n\r\nexport const InputWrapper = styled.div`\r\n\tbackground: #455a64;\r\n\tposition: relative;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n`;\r\n\r\nexport const FieldWrapper = styled.div`\r\n\tpadding-bottom: 20px;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n\tcolor: #8caab9;\r\n\tfont-size: 18px;\r\n\tmargin-bottom: 15px;\r\n`;\r\n\r\nexport const ContactInput = styled(Field)`\r\n\twidth: 100%;\r\n\tpadding-top: 17px;\r\n\tpadding-bottom: 17px;\r\n\tpadding-left: 40px;\r\n\tborder: none;\r\n\tbackground: #455a64;\r\n\r\n\tfont-size: 18px;\r\n\tcolor: inherit;\r\n`;\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { selectContacts } from 'redax/contacts/selectors';\r\nimport { addContact } from 'redax/contacts/operations';\r\n\r\nimport { Formik, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport {\r\n\tFormStyled,\r\n\tFieldWrapper,\r\n\tInputWrapper,\r\n\tLabel,\r\n\tContactInput,\r\n} from './Phonebook.styled';\r\n\r\nimport { Button } from 'Components/Button/Button';\r\nimport { UserIcon, PhoneIcon } from 'Components/Form/Form.styled';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tnumber: '',\r\n};\r\n\r\nconst namePattern = /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/;\r\nconst phonePattern =\r\n\t/\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/;\r\n\r\nconst schema = Yup.object().shape({\r\n\tname: Yup.string()\r\n\t\t.max(15, 'Must be 15 characters or less')\r\n\t\t.required('Required')\r\n\t\t.matches(\r\n\t\t\tnamePattern,\r\n\t\t\t\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n\t\t),\r\n\tnumber: Yup.string()\r\n\t\t.max(13, 'Must be 13 characters or less')\r\n\t\t.required('Required')\r\n\t\t.matches(\r\n\t\t\tphonePattern,\r\n\t\t\t'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\r\n\t\t),\r\n});\r\n\r\nexport const Phonebook = () => {\r\n\tconst contacts = useSelector(selectContacts);\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst handleSubmit = (newContact, { resetForm }) => {\r\n\t\tconst alreadyExist = contacts.find(\r\n\t\t\t(contact) => contact.name.toLowerCase() === newContact.name.toLowerCase()\r\n\t\t);\r\n\r\n\t\tif (alreadyExist) {\r\n\t\t\tresetForm();\r\n\t\t\ttoast.error('Such name already exist', {\r\n\t\t\t\tposition: 'bottom-right',\r\n\t\t\t\tautoClose: 4000,\r\n\t\t\t\thideProgressBar: false,\r\n\t\t\t\tcloseOnClick: true,\r\n\t\t\t\tpauseOnHover: true,\r\n\t\t\t\tdraggable: true,\r\n\t\t\t\tprogress: undefined,\r\n\t\t\t\ttheme: 'dark',\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tdispatch(addContact(newContact));\r\n\t\ttoast.success(`New contact ${newContact.name} created!`);\r\n\t\tresetForm();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tinitialValues={initialValues}\r\n\t\t\tvalidationSchema={schema}\r\n\t\t\tonSubmit={handleSubmit}\r\n\t\t>\r\n\t\t\t<FormStyled>\r\n\t\t\t\t<FieldWrapper>\r\n\t\t\t\t\t<Label htmlFor=\"name\">Name</Label>\r\n\t\t\t\t\t<InputWrapper>\r\n\t\t\t\t\t\t<UserIcon />\r\n\t\t\t\t\t\t<ContactInput\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tname=\"name\"\r\n\t\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\t\tplaceholder=\"Tom Jhonson\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</InputWrapper>\r\n\t\t\t\t\t<ErrorMessage name={'name'}></ErrorMessage>\r\n\t\t\t\t</FieldWrapper>\r\n\r\n\t\t\t\t<FieldWrapper>\r\n\t\t\t\t\t<Label htmlFor=\"number\">Telephone</Label>\r\n\t\t\t\t\t<InputWrapper>\r\n\t\t\t\t\t\t<PhoneIcon />\r\n\t\t\t\t\t\t<ContactInput\r\n\t\t\t\t\t\t\ttype=\"tel\"\r\n\t\t\t\t\t\t\tname=\"number\"\r\n\t\t\t\t\t\t\tplaceholder=\"+28023456724\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</InputWrapper>\r\n\t\t\t\t\t<ErrorMessage name={'number'}></ErrorMessage>\r\n\t\t\t\t</FieldWrapper>\r\n\r\n\t\t\t\t<Button type=\"submit\">Add contact</Button>\r\n\t\t\t</FormStyled>\r\n\t\t</Formik>\r\n\t);\r\n};\r\n","import { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchContacts } from 'redax/contacts/operations';\r\nimport { selectContacts } from 'redax/contacts/selectors';\r\n\r\nimport { ContactList } from 'Components/ContactsList/ContactList';\r\nimport { Filter } from 'Components/Filter/Filter';\r\nimport { Section, SectionTitle } from 'Components/Layout/Layout.styled';\r\nimport { Phonebook } from 'Components/Phonebook/Phonebook';\r\nconst ContactsPage = () => {\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst [filter, setFilter] = useState('');\r\n\tconst contacts = useSelector(selectContacts);\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(fetchContacts());\r\n\t}, [dispatch]);\r\n\r\n\tconst handleChange = (value) => {\r\n\t\tsetFilter(value);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Section>\r\n\t\t\t\t<SectionTitle>Phonebook</SectionTitle>\r\n\t\t\t\t<Phonebook />\r\n\t\t\t</Section>\r\n\t\t\t<Section>\r\n\t\t\t\t<SectionTitle>Contacts</SectionTitle>\r\n\t\t\t\t<Filter filter={filter} handleChange={handleChange} />\r\n\t\t\t\t<ContactList filter={filter} contacts={contacts} />\r\n\t\t\t</Section>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default ContactsPage;\r\n"],"names":["Form","styled","form","_templateObject","_taggedTemplateLiteral","Label","label","_templateObject2","InputWrapper","div","_templateObject3","StyledInput","input","_templateObject4","UserIcon","_templateObject5","IoPersonCircleOutline","_templateObject6","EmailIcon","MdOutlineAlternateEmail","_templateObject7","PasswordIcon","FiLock","_templateObject8","PhoneIcon","MdOutlinePhoneInTalk","_templateObject9","SearchIcon","IoSearchSharp","_templateObject10","selectContacts","state","contacts","items","BaseListItem","li","ListItem","_ref","ItemInfo","PersonName","p","PhoneNumber","ContactItem","name","number","id","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","isDeleting","setIsDeleting","_jsxs","children","_jsx","Button","className","onClick","deleteContact","handleDelete","disabled","TailSpin","color","width","height","RiDeleteBin5Line","size","List","TransitionGroup","ContactList","filter","filteredContacts","contact","toLowerCase","includes","_Fragment","component","map","_ref2","Transition","timeout","mountOnEnter","unmountOnExit","Filter","handleChange","type","value","onChange","e","target","toLocaleLowerCase","FormStyled","FieldWrapper","ContactInput","Field","initialValues","schema","Yup","shape","max","required","matches","Phonebook","useSelector","Formik","validationSchema","onSubmit","newContact","resetForm","find","toast","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","addContact","success","concat","htmlFor","autoComplete","placeholder","ErrorMessage","setFilter","useEffect","fetchContacts","Section","SectionTitle"],"sourceRoot":""}